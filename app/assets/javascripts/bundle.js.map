{"version":3,"sources":["./frontend/api_util.js","./frontend/follow_toggle.js","webpack/bootstrap","./frontend/twitter.js"],"names":[],"mappings":";;;;;;;;;AAAA;;AAEA;AACA;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA,SAAS;AACT,KAAK;;AAEL;;AAEA,yB;;;;;;;;;;ACpBA,gBAAgB,mBAAO,CAAC,0CAAY;;AAEpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,8B;;;;;;UCvEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,qBAAqB,mBAAO,CAAC,oDAAiB;;AAE9C;AACA,+EAA+E;AAC/E,CAAC,E","file":"bundle.js","sourcesContent":["const APIUtil = {\n    \n    followUser: id => {\n        $.ajax({\n            method: 'POST',\n            url: `/users/${id}/follow`,\n            dataType: 'json'\n        })\n    },\n\n    unfollowUser: id => {\n        $.ajax({\n            method: 'DELETE',\n            url: `/users/${id}/follow`,\n            dataType: 'json'\n        })\n    },\n\n};\n\nmodule.exports = APIUtil;","const APIUtil = require(\"./api_util\");\n\nclass FollowToggle {\n    constructor(el, options) {\n        this.$el = $(el);\n        this.userId = this.$el.data('user-id') || options.userId;\n        this.followState = this.$el.data('initial-follow-state') || options.followState;\n        \n        this.render();\n        this.$el.on('click', this.handleClick.bind(this));\n    }\n\n    render() {\n        switch (this.followState) {\n            case 'followed':\n                // this.$el.prop('disabled', false);\n                this.$el.html('Unfollow!');\n                break;\n            case 'unfollowed':\n                // this.$el.prop('disabled', false);\n                this.$el.html('Follow!');\n                break;\n            // case 'following':\n                // this.$el.prop('disabled', true);\n                // this.$el.html('Following...');\n                // break;\n            // case 'unfollowing':\n                // this.$el.prop('disabled', true);\n                // this.$el.html('Unfollowing...');\n                // break;\n        }\n    }\n\n    fetchSuccess() {\n        this.followState = (this.followState === \"followed\") ? \"unfollowed\" : \"followed\";\n        this.render();\n        \n    };\n\n    fetchError() {\n        console.log('An error occured during updating follow status.')\n    };\n\n    handleClick(event) {\n        \n        event.preventDefault();\n        const followToggle = this;\n\n        if (this.followState === \"unfollowed\") {\n            // this.followState = 'following';\n            // this.render();\n\n            $.when(APIUtil.followUser(this.userId))\n            .then(this.fetchSuccess.bind(this))\n            .fail(this.fetchError.bind(this));\n\n\n        } else {\n            // this.followState = 'unfollowing';\n            // this.render();\n\n            $.when(APIUtil.unfollowUser(this.userId))\n            .then(this.fetchSuccess.bind(this))\n            .fail(this.fetchError.bind(this));\n\n        }\n        \n    }\n\n}\n\nmodule.exports = FollowToggle;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require(\"./follow_toggle\");\n\n$(function() {\n    $(\"button.follow-toggle\").each((idx, button) => new FollowToggle(button, {}));\n});"],"sourceRoot":""}